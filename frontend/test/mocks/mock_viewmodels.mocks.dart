// Mocks generated by Mockito 5.4.5 from annotations
// in parkease/test/mocks/mock_viewmodels.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:flutter/material.dart' as _i4;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:parkease/core/models/booking_model.dart' as _i9;
import 'package:parkease/core/models/parking_model.dart' as _i8;
import 'package:parkease/core/models/user_model.dart' as _i5;
import 'package:parkease/core/viewmodels/auth_viewmodel.dart' as _i2;
import 'package:parkease/core/viewmodels/booking_viewmodel.dart' as _i13;
import 'package:parkease/core/viewmodels/home_viewmodel.dart' as _i7;
import 'package:parkease/core/viewmodels/map_viewmodel.dart' as _i10;
import 'package:parkease/core/viewmodels/profile_viewmodel.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthViewModel extends _i1.Mock implements _i2.AuthViewModel {
  MockAuthViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  bool get isAdmin => (super.noSuchMethod(
        Invocation.getter(#isAdmin),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> register({
    required String? name,
    required String? email,
    required String? password,
    required String? phone,
    required String? licensePlate,
    required String? vehicleType,
    String? color,
    String? model,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
            #phone: phone,
            #licensePlate: licensePlate,
            #vehicleType: vehicleType,
            #color: color,
            #model: model,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> logout(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [context],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> updateProfile({
    String? name,
    String? phone,
    _i5.VehicleInfo? vehicleInfo,
    _i5.UserPreferences? preferences,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #name: name,
            #phone: phone,
            #vehicleInfo: vehicleInfo,
            #preferences: preferences,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> refreshUserData() => (super.noSuchMethod(
        Invocation.method(
          #refreshUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<bool> requestPasswordReset({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPasswordReset,
          [],
          {#email: email},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> resetPassword({
    required String? token,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {
            #token: token,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HomeViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeViewModel extends _i1.Mock implements _i7.HomeViewModel {
  MockHomeViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i8.ParkingLot> get nearbyParkingLots => (super.noSuchMethod(
        Invocation.getter(#nearbyParkingLots),
        returnValue: <_i8.ParkingLot>[],
      ) as List<_i8.ParkingLot>);

  @override
  List<_i9.Booking> get activeBookings => (super.noSuchMethod(
        Invocation.getter(#activeBookings),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> searchParkingLots(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchParkingLots,
          [query],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void filterParkingLotsByAmenities(List<String>? amenities) =>
      super.noSuchMethod(
        Invocation.method(
          #filterParkingLotsByAmenities,
          [amenities],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sortParkingLotsByDistance() => super.noSuchMethod(
        Invocation.method(
          #sortParkingLotsByDistance,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sortParkingLotsByPrice() => super.noSuchMethod(
        Invocation.method(
          #sortParkingLotsByPrice,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sortParkingLotsByAvailability() => super.noSuchMethod(
        Invocation.method(
          #sortParkingLotsByAvailability,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MapViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapViewModel extends _i1.Mock implements _i10.MapViewModel {
  MockMapViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<_i11.Marker> get markers => (super.noSuchMethod(
        Invocation.getter(#markers),
        returnValue: <_i11.Marker>{},
      ) as Set<_i11.Marker>);

  @override
  List<_i8.ParkingLot> get parkingLots => (super.noSuchMethod(
        Invocation.getter(#parkingLots),
        returnValue: <_i8.ParkingLot>[],
      ) as List<_i8.ParkingLot>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setMapController(_i11.GoogleMapController? controller) =>
      super.noSuchMethod(
        Invocation.method(
          #setMapController,
          [controller],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void selectParkingLot(_i8.ParkingLot? parkingLot) => super.noSuchMethod(
        Invocation.method(
          #selectParkingLot,
          [parkingLot],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSelectedParkingLot() => super.noSuchMethod(
        Invocation.method(
          #clearSelectedParkingLot,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> moveToUserLocation() => (super.noSuchMethod(
        Invocation.method(
          #moveToUserLocation,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> searchLocation(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchLocation,
          [query],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> refreshMapData() => (super.noSuchMethod(
        Invocation.method(
          #refreshMapData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProfileViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileViewModel extends _i1.Mock implements _i12.ProfileViewModel {
  MockProfileViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.Booking> get recentBookings => (super.noSuchMethod(
        Invocation.getter(#recentBookings),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> updateProfile({
    String? name,
    String? phone,
    _i5.VehicleInfo? vehicleInfo,
    _i5.UserPreferences? preferences,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #name: name,
            #phone: phone,
            #vehicleInfo: vehicleInfo,
            #preferences: preferences,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> updateThemePreference(bool? isDarkMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateThemePreference,
          [isDarkMode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateNotificationPreference(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationPreference,
          [enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> updateVehicleInfo({
    required String? licensePlate,
    required String? vehicleType,
    String? color,
    String? model,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVehicleInfo,
          [],
          {
            #licensePlate: licensePlate,
            #vehicleType: vehicleType,
            #color: color,
            #model: model,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> refreshProfile() => (super.noSuchMethod(
        Invocation.method(
          #refreshProfile,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> logout(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [context],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<Map<String, dynamic>> getUserStats() => (super.noSuchMethod(
        Invocation.method(
          #getUserStats,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> refreshProfileData() => (super.noSuchMethod(
        Invocation.method(
          #refreshProfileData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BookingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingViewModel extends _i1.Mock implements _i13.BookingViewModel {
  MockBookingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.Booking> get userBookings => (super.noSuchMethod(
        Invocation.getter(#userBookings),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);

  @override
  int get totalPages => (super.noSuchMethod(
        Invocation.getter(#totalPages),
        returnValue: 0,
      ) as int);

  @override
  bool get hasMoreBookings => (super.noSuchMethod(
        Invocation.getter(#hasMoreBookings),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> getUserBookings({bool? refresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserBookings,
          [],
          {#refresh: refresh},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> loadMoreBookings() => (super.noSuchMethod(
        Invocation.method(
          #loadMoreBookings,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> getBookingDetails(String? bookingId) => (super.noSuchMethod(
        Invocation.method(
          #getBookingDetails,
          [bookingId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> createBooking({
    required String? parkingLotId,
    required String? spotNumber,
    required DateTime? startTime,
    required DateTime? endTime,
    required _i5.VehicleInfo? vehicleInfo,
    required String? paymentMethod,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBooking,
          [],
          {
            #parkingLotId: parkingLotId,
            #spotNumber: spotNumber,
            #startTime: startTime,
            #endTime: endTime,
            #vehicleInfo: vehicleInfo,
            #paymentMethod: paymentMethod,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> cancelBooking(
    String? bookingId, {
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelBooking,
          [bookingId],
          {#reason: reason},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> checkInBooking(String? bookingId) => (super.noSuchMethod(
        Invocation.method(
          #checkInBooking,
          [bookingId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> checkOutBooking(String? bookingId) => (super.noSuchMethod(
        Invocation.method(
          #checkOutBooking,
          [bookingId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> submitFeedback(
    String? bookingId,
    int? rating, {
    String? comment,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitFeedback,
          [
            bookingId,
            rating,
          ],
          {#comment: comment},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> filterBookingsByStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterBookingsByStatus,
          [status],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i9.Booking> getActiveBookings() => (super.noSuchMethod(
        Invocation.method(
          #getActiveBookings,
          [],
        ),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  List<_i9.Booking> getUpcomingBookings() => (super.noSuchMethod(
        Invocation.method(
          #getUpcomingBookings,
          [],
        ),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  List<_i9.Booking> getCompletedBookings() => (super.noSuchMethod(
        Invocation.method(
          #getCompletedBookings,
          [],
        ),
        returnValue: <_i9.Booking>[],
      ) as List<_i9.Booking>);

  @override
  void clearSelectedBooking() => super.noSuchMethod(
        Invocation.method(
          #clearSelectedBooking,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
