// Mocks generated by Mockito 5.4.5 from annotations
// in parkease/test/features/profile/data/repositories/profile_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:parkease/core/network/network_info.dart' as _i6;
import 'package:parkease/features/profile/data/datasources/profile_local_datasource.dart'
    as _i5;
import 'package:parkease/features/profile/data/datasources/profile_remote_datasource.dart'
    as _i3;
import 'package:parkease/features/profile/data/models/user_profile_dto.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfileDto_0 extends _i1.SmartFake
    implements _i2.UserProfileDto {
  _FakeUserProfileDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRemoteDataSource extends _i1.Mock
    implements _i3.ProfileRemoteDataSource {
  MockProfileRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfileDto> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<_i2.UserProfileDto>.value(_FakeUserProfileDto_0(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.UserProfileDto>);

  @override
  _i4.Future<_i2.UserProfileDto> updateUserProfile(
    String? userId,
    Map<String, dynamic>? updateData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [
            userId,
            updateData,
          ],
        ),
        returnValue: _i4.Future<_i2.UserProfileDto>.value(_FakeUserProfileDto_0(
          this,
          Invocation.method(
            #updateUserProfile,
            [
              userId,
              updateData,
            ],
          ),
        )),
      ) as _i4.Future<_i2.UserProfileDto>);

  @override
  _i4.Future<void> deleteUserProfile(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserProfileDto> uploadProfileImage(
    String? userId,
    String? imagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfileImage,
          [
            userId,
            imagePath,
          ],
        ),
        returnValue: _i4.Future<_i2.UserProfileDto>.value(_FakeUserProfileDto_0(
          this,
          Invocation.method(
            #uploadProfileImage,
            [
              userId,
              imagePath,
            ],
          ),
        )),
      ) as _i4.Future<_i2.UserProfileDto>);
}

/// A class which mocks [ProfileLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileLocalDataSource extends _i1.Mock
    implements _i5.ProfileLocalDataSource {
  MockProfileLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfileDto> getCachedUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<_i2.UserProfileDto>.value(_FakeUserProfileDto_0(
          this,
          Invocation.method(
            #getCachedUserProfile,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.UserProfileDto>);

  @override
  _i4.Future<void> cacheUserProfile(_i2.UserProfileDto? profileDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheUserProfile,
          [profileDto],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearCachedUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCachedUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
